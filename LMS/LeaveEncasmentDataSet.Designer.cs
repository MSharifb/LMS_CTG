//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LMS.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LeaveEncasmentDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LeaveEncasmentDataSet : global::System.Data.DataSet {
        
        private LMS_uspRptLeaveEncasmentDataTable tableLMS_uspRptLeaveEncasment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LeaveEncasmentDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LeaveEncasmentDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LMS_uspRptLeaveEncasment"] != null)) {
                    base.Tables.Add(new LMS_uspRptLeaveEncasmentDataTable(ds.Tables["LMS_uspRptLeaveEncasment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LMS_uspRptLeaveEncasmentDataTable LMS_uspRptLeaveEncasment {
            get {
                return this.tableLMS_uspRptLeaveEncasment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LeaveEncasmentDataSet cln = ((LeaveEncasmentDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LMS_uspRptLeaveEncasment"] != null)) {
                    base.Tables.Add(new LMS_uspRptLeaveEncasmentDataTable(ds.Tables["LMS_uspRptLeaveEncasment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLMS_uspRptLeaveEncasment = ((LMS_uspRptLeaveEncasmentDataTable)(base.Tables["LMS_uspRptLeaveEncasment"]));
            if ((initTable == true)) {
                if ((this.tableLMS_uspRptLeaveEncasment != null)) {
                    this.tableLMS_uspRptLeaveEncasment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LeaveEncasmentDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LeaveEncasmentDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLMS_uspRptLeaveEncasment = new LMS_uspRptLeaveEncasmentDataTable();
            base.Tables.Add(this.tableLMS_uspRptLeaveEncasment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLMS_uspRptLeaveEncasment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LeaveEncasmentDataSet ds = new LeaveEncasmentDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LMS_uspRptLeaveEncasmentRowChangeEventHandler(object sender, LMS_uspRptLeaveEncasmentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LMS_uspRptLeaveEncasmentDataTable : global::System.Data.TypedTableBase<LMS_uspRptLeaveEncasmentRow> {
            
            private global::System.Data.DataColumn columnROWID;
            
            private global::System.Data.DataColumn columnintLeaveEncaseID;
            
            private global::System.Data.DataColumn columnintLeaveYearID;
            
            private global::System.Data.DataColumn columnstrEmpID;
            
            private global::System.Data.DataColumn columnintPaymentYear;
            
            private global::System.Data.DataColumn columnstrPaymentMonth;
            
            private global::System.Data.DataColumn columnintLeaveTypeID;
            
            private global::System.Data.DataColumn columnfltBeforeBalance;
            
            private global::System.Data.DataColumn columnfltEncaseDuration;
            
            private global::System.Data.DataColumn columnfltAfterBalance;
            
            private global::System.Data.DataColumn columnstrCompanyID;
            
            private global::System.Data.DataColumn columnstrIUser;
            
            private global::System.Data.DataColumn columnstrEUser;
            
            private global::System.Data.DataColumn columndtIDate;
            
            private global::System.Data.DataColumn columndtEDate;
            
            private global::System.Data.DataColumn columnintLeaveEncashMasterID;
            
            private global::System.Data.DataColumn columnstrYearTitle;
            
            private global::System.Data.DataColumn columnstrLeaveType;
            
            private global::System.Data.DataColumn columnstrEmpName;
            
            private global::System.Data.DataColumn columnstrDesignation;
            
            private global::System.Data.DataColumn columnstrDepartment;
            
            private global::System.Data.DataColumn columnstrGender;
            
            private global::System.Data.DataColumn columnstrLocation;
            
            private global::System.Data.DataColumn columnstrReligion;
            
            private global::System.Data.DataColumn columnstrCategory;
            
            private global::System.Data.DataColumn columnstrCompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentDataTable() {
                this.TableName = "LMS_uspRptLeaveEncasment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LMS_uspRptLeaveEncasmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LMS_uspRptLeaveEncasmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROWIDColumn {
                get {
                    return this.columnROWID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLeaveEncaseIDColumn {
                get {
                    return this.columnintLeaveEncaseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLeaveYearIDColumn {
                get {
                    return this.columnintLeaveYearID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strEmpIDColumn {
                get {
                    return this.columnstrEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intPaymentYearColumn {
                get {
                    return this.columnintPaymentYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentMonthColumn {
                get {
                    return this.columnstrPaymentMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLeaveTypeIDColumn {
                get {
                    return this.columnintLeaveTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fltBeforeBalanceColumn {
                get {
                    return this.columnfltBeforeBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fltEncaseDurationColumn {
                get {
                    return this.columnfltEncaseDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fltAfterBalanceColumn {
                get {
                    return this.columnfltAfterBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCompanyIDColumn {
                get {
                    return this.columnstrCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strIUserColumn {
                get {
                    return this.columnstrIUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strEUserColumn {
                get {
                    return this.columnstrEUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtIDateColumn {
                get {
                    return this.columndtIDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtEDateColumn {
                get {
                    return this.columndtEDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLeaveEncashMasterIDColumn {
                get {
                    return this.columnintLeaveEncashMasterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strYearTitleColumn {
                get {
                    return this.columnstrYearTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLeaveTypeColumn {
                get {
                    return this.columnstrLeaveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strEmpNameColumn {
                get {
                    return this.columnstrEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDesignationColumn {
                get {
                    return this.columnstrDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDepartmentColumn {
                get {
                    return this.columnstrDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strGenderColumn {
                get {
                    return this.columnstrGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLocationColumn {
                get {
                    return this.columnstrLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strReligionColumn {
                get {
                    return this.columnstrReligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCategoryColumn {
                get {
                    return this.columnstrCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCompanyColumn {
                get {
                    return this.columnstrCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRow this[int index] {
                get {
                    return ((LMS_uspRptLeaveEncasmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LMS_uspRptLeaveEncasmentRowChangeEventHandler LMS_uspRptLeaveEncasmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LMS_uspRptLeaveEncasmentRowChangeEventHandler LMS_uspRptLeaveEncasmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LMS_uspRptLeaveEncasmentRowChangeEventHandler LMS_uspRptLeaveEncasmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LMS_uspRptLeaveEncasmentRowChangeEventHandler LMS_uspRptLeaveEncasmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLMS_uspRptLeaveEncasmentRow(LMS_uspRptLeaveEncasmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRow AddLMS_uspRptLeaveEncasmentRow(
                        long ROWID, 
                        int intLeaveYearID, 
                        string strEmpID, 
                        int intPaymentYear, 
                        string strPaymentMonth, 
                        int intLeaveTypeID, 
                        double fltBeforeBalance, 
                        double fltEncaseDuration, 
                        double fltAfterBalance, 
                        string strCompanyID, 
                        string strIUser, 
                        string strEUser, 
                        System.DateTime dtIDate, 
                        System.DateTime dtEDate, 
                        int intLeaveEncashMasterID, 
                        string strYearTitle, 
                        string strLeaveType, 
                        string strEmpName, 
                        string strDesignation, 
                        string strDepartment, 
                        string strGender, 
                        string strLocation, 
                        string strReligion, 
                        string strCategory, 
                        string strCompany) {
                LMS_uspRptLeaveEncasmentRow rowLMS_uspRptLeaveEncasmentRow = ((LMS_uspRptLeaveEncasmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ROWID,
                        null,
                        intLeaveYearID,
                        strEmpID,
                        intPaymentYear,
                        strPaymentMonth,
                        intLeaveTypeID,
                        fltBeforeBalance,
                        fltEncaseDuration,
                        fltAfterBalance,
                        strCompanyID,
                        strIUser,
                        strEUser,
                        dtIDate,
                        dtEDate,
                        intLeaveEncashMasterID,
                        strYearTitle,
                        strLeaveType,
                        strEmpName,
                        strDesignation,
                        strDepartment,
                        strGender,
                        strLocation,
                        strReligion,
                        strCategory,
                        strCompany};
                rowLMS_uspRptLeaveEncasmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLMS_uspRptLeaveEncasmentRow);
                return rowLMS_uspRptLeaveEncasmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRow FindByintLeaveEncaseID(int intLeaveEncaseID) {
                return ((LMS_uspRptLeaveEncasmentRow)(this.Rows.Find(new object[] {
                            intLeaveEncaseID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LMS_uspRptLeaveEncasmentDataTable cln = ((LMS_uspRptLeaveEncasmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LMS_uspRptLeaveEncasmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnROWID = base.Columns["ROWID"];
                this.columnintLeaveEncaseID = base.Columns["intLeaveEncaseID"];
                this.columnintLeaveYearID = base.Columns["intLeaveYearID"];
                this.columnstrEmpID = base.Columns["strEmpID"];
                this.columnintPaymentYear = base.Columns["intPaymentYear"];
                this.columnstrPaymentMonth = base.Columns["strPaymentMonth"];
                this.columnintLeaveTypeID = base.Columns["intLeaveTypeID"];
                this.columnfltBeforeBalance = base.Columns["fltBeforeBalance"];
                this.columnfltEncaseDuration = base.Columns["fltEncaseDuration"];
                this.columnfltAfterBalance = base.Columns["fltAfterBalance"];
                this.columnstrCompanyID = base.Columns["strCompanyID"];
                this.columnstrIUser = base.Columns["strIUser"];
                this.columnstrEUser = base.Columns["strEUser"];
                this.columndtIDate = base.Columns["dtIDate"];
                this.columndtEDate = base.Columns["dtEDate"];
                this.columnintLeaveEncashMasterID = base.Columns["intLeaveEncashMasterID"];
                this.columnstrYearTitle = base.Columns["strYearTitle"];
                this.columnstrLeaveType = base.Columns["strLeaveType"];
                this.columnstrEmpName = base.Columns["strEmpName"];
                this.columnstrDesignation = base.Columns["strDesignation"];
                this.columnstrDepartment = base.Columns["strDepartment"];
                this.columnstrGender = base.Columns["strGender"];
                this.columnstrLocation = base.Columns["strLocation"];
                this.columnstrReligion = base.Columns["strReligion"];
                this.columnstrCategory = base.Columns["strCategory"];
                this.columnstrCompany = base.Columns["strCompany"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnROWID = new global::System.Data.DataColumn("ROWID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROWID);
                this.columnintLeaveEncaseID = new global::System.Data.DataColumn("intLeaveEncaseID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLeaveEncaseID);
                this.columnintLeaveYearID = new global::System.Data.DataColumn("intLeaveYearID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLeaveYearID);
                this.columnstrEmpID = new global::System.Data.DataColumn("strEmpID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrEmpID);
                this.columnintPaymentYear = new global::System.Data.DataColumn("intPaymentYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintPaymentYear);
                this.columnstrPaymentMonth = new global::System.Data.DataColumn("strPaymentMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentMonth);
                this.columnintLeaveTypeID = new global::System.Data.DataColumn("intLeaveTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLeaveTypeID);
                this.columnfltBeforeBalance = new global::System.Data.DataColumn("fltBeforeBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfltBeforeBalance);
                this.columnfltEncaseDuration = new global::System.Data.DataColumn("fltEncaseDuration", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfltEncaseDuration);
                this.columnfltAfterBalance = new global::System.Data.DataColumn("fltAfterBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfltAfterBalance);
                this.columnstrCompanyID = new global::System.Data.DataColumn("strCompanyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCompanyID);
                this.columnstrIUser = new global::System.Data.DataColumn("strIUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrIUser);
                this.columnstrEUser = new global::System.Data.DataColumn("strEUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrEUser);
                this.columndtIDate = new global::System.Data.DataColumn("dtIDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtIDate);
                this.columndtEDate = new global::System.Data.DataColumn("dtEDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtEDate);
                this.columnintLeaveEncashMasterID = new global::System.Data.DataColumn("intLeaveEncashMasterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLeaveEncashMasterID);
                this.columnstrYearTitle = new global::System.Data.DataColumn("strYearTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrYearTitle);
                this.columnstrLeaveType = new global::System.Data.DataColumn("strLeaveType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLeaveType);
                this.columnstrEmpName = new global::System.Data.DataColumn("strEmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrEmpName);
                this.columnstrDesignation = new global::System.Data.DataColumn("strDesignation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDesignation);
                this.columnstrDepartment = new global::System.Data.DataColumn("strDepartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDepartment);
                this.columnstrGender = new global::System.Data.DataColumn("strGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrGender);
                this.columnstrLocation = new global::System.Data.DataColumn("strLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLocation);
                this.columnstrReligion = new global::System.Data.DataColumn("strReligion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrReligion);
                this.columnstrCategory = new global::System.Data.DataColumn("strCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCategory);
                this.columnstrCompany = new global::System.Data.DataColumn("strCompany", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCompany);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnintLeaveEncaseID}, true));
                this.columnROWID.ReadOnly = true;
                this.columnintLeaveEncaseID.AutoIncrement = true;
                this.columnintLeaveEncaseID.AllowDBNull = false;
                this.columnintLeaveEncaseID.ReadOnly = true;
                this.columnintLeaveEncaseID.Unique = true;
                this.columnintLeaveYearID.AllowDBNull = false;
                this.columnstrEmpID.AllowDBNull = false;
                this.columnstrEmpID.MaxLength = 50;
                this.columnintPaymentYear.AllowDBNull = false;
                this.columnstrPaymentMonth.AllowDBNull = false;
                this.columnstrPaymentMonth.MaxLength = 50;
                this.columnintLeaveTypeID.AllowDBNull = false;
                this.columnfltBeforeBalance.AllowDBNull = false;
                this.columnfltEncaseDuration.AllowDBNull = false;
                this.columnfltAfterBalance.AllowDBNull = false;
                this.columnstrCompanyID.AllowDBNull = false;
                this.columnstrCompanyID.MaxLength = 50;
                this.columnstrIUser.MaxLength = 50;
                this.columnstrEUser.MaxLength = 50;
                this.columnstrYearTitle.AllowDBNull = false;
                this.columnstrYearTitle.MaxLength = 10;
                this.columnstrLeaveType.AllowDBNull = false;
                this.columnstrLeaveType.MaxLength = 50;
                this.columnstrEmpName.AllowDBNull = false;
                this.columnstrEmpName.MaxLength = 200;
                this.columnstrDesignation.ReadOnly = true;
                this.columnstrDesignation.MaxLength = 100;
                this.columnstrDepartment.ReadOnly = true;
                this.columnstrDepartment.MaxLength = 100;
                this.columnstrGender.AllowDBNull = false;
                this.columnstrGender.MaxLength = 20;
                this.columnstrLocation.ReadOnly = true;
                this.columnstrLocation.MaxLength = 100;
                this.columnstrReligion.ReadOnly = true;
                this.columnstrReligion.MaxLength = 100;
                this.columnstrCategory.ReadOnly = true;
                this.columnstrCategory.MaxLength = 100;
                this.columnstrCompany.AllowDBNull = false;
                this.columnstrCompany.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRow NewLMS_uspRptLeaveEncasmentRow() {
                return ((LMS_uspRptLeaveEncasmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LMS_uspRptLeaveEncasmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LMS_uspRptLeaveEncasmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LMS_uspRptLeaveEncasmentRowChanged != null)) {
                    this.LMS_uspRptLeaveEncasmentRowChanged(this, new LMS_uspRptLeaveEncasmentRowChangeEvent(((LMS_uspRptLeaveEncasmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LMS_uspRptLeaveEncasmentRowChanging != null)) {
                    this.LMS_uspRptLeaveEncasmentRowChanging(this, new LMS_uspRptLeaveEncasmentRowChangeEvent(((LMS_uspRptLeaveEncasmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LMS_uspRptLeaveEncasmentRowDeleted != null)) {
                    this.LMS_uspRptLeaveEncasmentRowDeleted(this, new LMS_uspRptLeaveEncasmentRowChangeEvent(((LMS_uspRptLeaveEncasmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LMS_uspRptLeaveEncasmentRowDeleting != null)) {
                    this.LMS_uspRptLeaveEncasmentRowDeleting(this, new LMS_uspRptLeaveEncasmentRowChangeEvent(((LMS_uspRptLeaveEncasmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLMS_uspRptLeaveEncasmentRow(LMS_uspRptLeaveEncasmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LeaveEncasmentDataSet ds = new LeaveEncasmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LMS_uspRptLeaveEncasmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LMS_uspRptLeaveEncasmentRow : global::System.Data.DataRow {
            
            private LMS_uspRptLeaveEncasmentDataTable tableLMS_uspRptLeaveEncasment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LMS_uspRptLeaveEncasmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLMS_uspRptLeaveEncasment = ((LMS_uspRptLeaveEncasmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ROWID {
                get {
                    try {
                        return ((long)(this[this.tableLMS_uspRptLeaveEncasment.ROWIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROWID\' in table \'LMS_uspRptLeaveEncasment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.ROWIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLeaveEncaseID {
                get {
                    return ((int)(this[this.tableLMS_uspRptLeaveEncasment.intLeaveEncaseIDColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.intLeaveEncaseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLeaveYearID {
                get {
                    return ((int)(this[this.tableLMS_uspRptLeaveEncasment.intLeaveYearIDColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.intLeaveYearIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strEmpID {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strEmpIDColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strEmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intPaymentYear {
                get {
                    return ((int)(this[this.tableLMS_uspRptLeaveEncasment.intPaymentYearColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.intPaymentYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentMonth {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strPaymentMonthColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strPaymentMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLeaveTypeID {
                get {
                    return ((int)(this[this.tableLMS_uspRptLeaveEncasment.intLeaveTypeIDColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.intLeaveTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double fltBeforeBalance {
                get {
                    return ((double)(this[this.tableLMS_uspRptLeaveEncasment.fltBeforeBalanceColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.fltBeforeBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double fltEncaseDuration {
                get {
                    return ((double)(this[this.tableLMS_uspRptLeaveEncasment.fltEncaseDurationColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.fltEncaseDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double fltAfterBalance {
                get {
                    return ((double)(this[this.tableLMS_uspRptLeaveEncasment.fltAfterBalanceColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.fltAfterBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCompanyID {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strCompanyIDColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strIUser {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strIUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strIUser\' in table \'LMS_uspRptLeaveEncasment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strIUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strEUser {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strEUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strEUser\' in table \'LMS_uspRptLeaveEncasment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strEUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dtIDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLMS_uspRptLeaveEncasment.dtIDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtIDate\' in table \'LMS_uspRptLeaveEncasment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.dtIDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dtEDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLMS_uspRptLeaveEncasment.dtEDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtEDate\' in table \'LMS_uspRptLeaveEncasment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.dtEDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLeaveEncashMasterID {
                get {
                    try {
                        return ((int)(this[this.tableLMS_uspRptLeaveEncasment.intLeaveEncashMasterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLeaveEncashMasterID\' in table \'LMS_uspRptLeaveEncasment\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.intLeaveEncashMasterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strYearTitle {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strYearTitleColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strYearTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLeaveType {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strLeaveTypeColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strLeaveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strEmpName {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strEmpNameColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strEmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDesignation {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strDesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDesignation\' in table \'LMS_uspRptLeaveEncasment\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strDesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDepartment {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strDepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDepartment\' in table \'LMS_uspRptLeaveEncasment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strDepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strGender {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strGenderColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLocation {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLocation\' in table \'LMS_uspRptLeaveEncasment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strReligion {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strReligionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strReligion\' in table \'LMS_uspRptLeaveEncasment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strReligionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCategory {
                get {
                    try {
                        return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCategory\' in table \'LMS_uspRptLeaveEncasment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCompany {
                get {
                    return ((string)(this[this.tableLMS_uspRptLeaveEncasment.strCompanyColumn]));
                }
                set {
                    this[this.tableLMS_uspRptLeaveEncasment.strCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROWIDNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.ROWIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROWIDNull() {
                this[this.tableLMS_uspRptLeaveEncasment.ROWIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrIUserNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strIUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrIUserNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strIUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrEUserNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strEUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrEUserNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strEUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdtIDateNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.dtIDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdtIDateNull() {
                this[this.tableLMS_uspRptLeaveEncasment.dtIDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdtEDateNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.dtEDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdtEDateNull() {
                this[this.tableLMS_uspRptLeaveEncasment.dtEDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLeaveEncashMasterIDNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.intLeaveEncashMasterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLeaveEncashMasterIDNull() {
                this[this.tableLMS_uspRptLeaveEncasment.intLeaveEncashMasterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDesignationNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strDesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDesignationNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strDesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDepartmentNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strDepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDepartmentNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strDepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLocationNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLocationNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrReligionNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strReligionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrReligionNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strReligionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCategoryNull() {
                return this.IsNull(this.tableLMS_uspRptLeaveEncasment.strCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCategoryNull() {
                this[this.tableLMS_uspRptLeaveEncasment.strCategoryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LMS_uspRptLeaveEncasmentRowChangeEvent : global::System.EventArgs {
            
            private LMS_uspRptLeaveEncasmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRowChangeEvent(LMS_uspRptLeaveEncasmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LMS_uspRptLeaveEncasmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LMS.Web.LeaveEncasmentDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LMS_uspRptLeaveEncasmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LMS_uspRptLeaveEncasmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LMS_uspRptLeaveEncasment";
            tableMapping.ColumnMappings.Add("ROWID", "ROWID");
            tableMapping.ColumnMappings.Add("intLeaveEncaseID", "intLeaveEncaseID");
            tableMapping.ColumnMappings.Add("intLeaveYearID", "intLeaveYearID");
            tableMapping.ColumnMappings.Add("strEmpID", "strEmpID");
            tableMapping.ColumnMappings.Add("intPaymentYear", "intPaymentYear");
            tableMapping.ColumnMappings.Add("strPaymentMonth", "strPaymentMonth");
            tableMapping.ColumnMappings.Add("intLeaveTypeID", "intLeaveTypeID");
            tableMapping.ColumnMappings.Add("fltBeforeBalance", "fltBeforeBalance");
            tableMapping.ColumnMappings.Add("fltEncaseDuration", "fltEncaseDuration");
            tableMapping.ColumnMappings.Add("fltAfterBalance", "fltAfterBalance");
            tableMapping.ColumnMappings.Add("strCompanyID", "strCompanyID");
            tableMapping.ColumnMappings.Add("strIUser", "strIUser");
            tableMapping.ColumnMappings.Add("strEUser", "strEUser");
            tableMapping.ColumnMappings.Add("dtIDate", "dtIDate");
            tableMapping.ColumnMappings.Add("dtEDate", "dtEDate");
            tableMapping.ColumnMappings.Add("intLeaveEncashMasterID", "intLeaveEncashMasterID");
            tableMapping.ColumnMappings.Add("strYearTitle", "strYearTitle");
            tableMapping.ColumnMappings.Add("strLeaveType", "strLeaveType");
            tableMapping.ColumnMappings.Add("strEmpName", "strEmpName");
            tableMapping.ColumnMappings.Add("strDesignation", "strDesignation");
            tableMapping.ColumnMappings.Add("strDepartment", "strDepartment");
            tableMapping.ColumnMappings.Add("strGender", "strGender");
            tableMapping.ColumnMappings.Add("strLocation", "strLocation");
            tableMapping.ColumnMappings.Add("strReligion", "strReligion");
            tableMapping.ColumnMappings.Add("strCategory", "strCategory");
            tableMapping.ColumnMappings.Add("strCompany", "strCompany");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.LMS_uspRptLeaveEncasment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLeaveYearID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strCompanyID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strEmpID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empStatus", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strDepartmentID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strDesignationID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strGender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLocationID", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCategoryCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLeaveTypeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSortBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strSortType", global::System.Data.SqlDbType.VarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startRowIndex", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maximumRows", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numTotalRows", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numErrorCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strErrorMsg", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(
                    LeaveEncasmentDataSet.LMS_uspRptLeaveEncasmentDataTable dataTable, 
                    global::System.Nullable<int> intLeaveYearID, 
                    string strCompanyID, 
                    string strEmpID, 
                    global::System.Nullable<int> empStatus, 
                    string strDepartmentID, 
                    string strDesignationID, 
                    string strGender, 
                    string strLocationID, 
                    global::System.Nullable<int> intCategoryCode, 
                    global::System.Nullable<int> intLeaveTypeID, 
                    string strSortBy, 
                    string strSortType, 
                    global::System.Nullable<int> startRowIndex, 
                    global::System.Nullable<int> maximumRows, 
                    ref global::System.Nullable<int> numTotalRows, 
                    ref global::System.Nullable<int> numErrorCode, 
                    ref string strErrorMsg) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((intLeaveYearID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intLeaveYearID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((strCompanyID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(strCompanyID));
            }
            if ((strEmpID == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(strEmpID));
            }
            if ((empStatus.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(empStatus.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((strDepartmentID == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(strDepartmentID));
            }
            if ((strDesignationID == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(strDesignationID));
            }
            if ((strGender == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(strGender));
            }
            if ((strLocationID == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(strLocationID));
            }
            if ((intCategoryCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(intCategoryCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((intLeaveTypeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(intLeaveTypeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((strSortBy == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(strSortBy));
            }
            if ((strSortType == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(strSortType));
            }
            if ((startRowIndex.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(startRowIndex.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((maximumRows.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(maximumRows.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((numTotalRows.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(numTotalRows.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((numErrorCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((int)(numErrorCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((strErrorMsg == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(strErrorMsg));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[15].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[15].Value.GetType() == typeof(global::System.DBNull)))) {
                numTotalRows = new global::System.Nullable<int>();
            }
            else {
                numTotalRows = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[15].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[16].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[16].Value.GetType() == typeof(global::System.DBNull)))) {
                numErrorCode = new global::System.Nullable<int>();
            }
            else {
                numErrorCode = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[16].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[17].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[17].Value.GetType() == typeof(global::System.DBNull)))) {
                strErrorMsg = null;
            }
            else {
                strErrorMsg = ((string)(this.Adapter.SelectCommand.Parameters[17].Value));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LeaveEncasmentDataSet.LMS_uspRptLeaveEncasmentDataTable GetData(
                    global::System.Nullable<int> intLeaveYearID, 
                    string strCompanyID, 
                    string strEmpID, 
                    global::System.Nullable<int> empStatus, 
                    string strDepartmentID, 
                    string strDesignationID, 
                    string strGender, 
                    string strLocationID, 
                    global::System.Nullable<int> intCategoryCode, 
                    global::System.Nullable<int> intLeaveTypeID, 
                    string strSortBy, 
                    string strSortType, 
                    global::System.Nullable<int> startRowIndex, 
                    global::System.Nullable<int> maximumRows, 
                    ref global::System.Nullable<int> numTotalRows, 
                    ref global::System.Nullable<int> numErrorCode, 
                    ref string strErrorMsg) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((intLeaveYearID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intLeaveYearID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((strCompanyID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(strCompanyID));
            }
            if ((strEmpID == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(strEmpID));
            }
            if ((empStatus.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(empStatus.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((strDepartmentID == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(strDepartmentID));
            }
            if ((strDesignationID == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(strDesignationID));
            }
            if ((strGender == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(strGender));
            }
            if ((strLocationID == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(strLocationID));
            }
            if ((intCategoryCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(intCategoryCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((intLeaveTypeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(intLeaveTypeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((strSortBy == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(strSortBy));
            }
            if ((strSortType == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(strSortType));
            }
            if ((startRowIndex.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(startRowIndex.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((maximumRows.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(maximumRows.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((numTotalRows.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(numTotalRows.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((numErrorCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((int)(numErrorCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((strErrorMsg == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(strErrorMsg));
            }
            LeaveEncasmentDataSet.LMS_uspRptLeaveEncasmentDataTable dataTable = new LeaveEncasmentDataSet.LMS_uspRptLeaveEncasmentDataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[15].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[15].Value.GetType() == typeof(global::System.DBNull)))) {
                numTotalRows = new global::System.Nullable<int>();
            }
            else {
                numTotalRows = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[15].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[16].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[16].Value.GetType() == typeof(global::System.DBNull)))) {
                numErrorCode = new global::System.Nullable<int>();
            }
            else {
                numErrorCode = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[16].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[17].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[17].Value.GetType() == typeof(global::System.DBNull)))) {
                strErrorMsg = null;
            }
            else {
                strErrorMsg = ((string)(this.Adapter.SelectCommand.Parameters[17].Value));
            }
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LeaveEncasmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LeaveEncasmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LeaveEncasmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LeaveEncasmentDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591